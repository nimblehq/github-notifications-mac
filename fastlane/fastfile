# frozen_string_literal: true

before_all do
  ensure_bundle_exec
end

default_platform(:mac)

platform :mac do

  desc 'Match Certificate'
  lane :sync_certificate do
    match(
      type:'developer_id',
      username: ENV['FASTLANE_USERNAME'],
      team_id: ENV['TEAM_ID'],
      app_identifier: "co.nimblehq.GithubNotifications"
    )
  end

  desc 'Match Certificate for CICD'
  lane :sync_certificate_ci do
    keychain_name = 'keychain_name'
    keychain_password = 'keychain_password'
    create_keychain(
      name: keychain_name,
      password: keychain_password,
      default_keychain: true,
      unlock: true,
      timeout: 3600,
      lock_when_sleeps: false
    )
    match(
      type:'developer_id',
      username: ENV['FASTLANE_USERNAME'],
      team_id: ENV['TEAM_ID'],
      keychain_name: keychain_name,
      keychain_password: keychain_password,
      app_identifier: "co.nimblehq.GithubNotifications",
      readonly: true
    )
  end

  desc 'Build Mac app'
  lane :build do
    build_mac_app(export_method:"developer-id")
  end

  desc 'notorize for macOS >=14.5 (only works with Xcode13)'
  lane :notarize_app do
    notarize(
      package:"Github Notifications.app",
      username: ENV['FASTLANE_USERNAME']
    )
  end

  desc 'zip app'
  lane :package_app do
    zip(
      path: "Github Notifications.app",
      output_path: "GithubNotifications.app.zip"
    )
  end

  desc 'Test Build'
  lane :scan_build do
    build_mac_app(
      scheme: "Github Notifications",
      configuration: 'Debug',
      skip_codesigning:true,
      skip_archive:true
    )
  end
end
