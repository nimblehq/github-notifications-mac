on:
  push:
    tags:
    - 'v*'

name: Build and Upload Release Asset

jobs:
  build:
    name: Build and Upload Release Asset
    runs-on: macos-latest
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.5.0
        with:
          access_token: ${{ github.token }}

      - name: Checkout Repo
        uses: actions/checkout@v2
      # Set fetch-depth (default: 1) to get whole tree
        with:
          fetch-depth: 0

      - name: Install SSH key
        uses: webfactory/ssh-agent@v0.4.1
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
              
      - name: Bundle install
        run: bundle install

      - name: Cache Pods
        uses: actions/cache@v2
        id: cocoapodCache
        with:
          path: Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-

      - name: Sync Certificate
        run: bundle exec fastlane sync_certificate_ci
        env:
          FASTLANE_USERNAME: ${{ secrets.FASTLANE_USERNAME }}
          FASTLANE_PASSWORD: ${{ secrets.FASTLANE_PASSWORD }}
          FASTLANE_SESSION: ${{ secrets.FASTLANE_SESSION }}
          TEAM_ID: ${{ secrets.TEAM_ID }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}

      - name: Build App
        run: bundle exec fastlane build
        env:
          FASTLANE_USERNAME: ${{ secrets.FASTLANE_USERNAME }}
          FASTLANE_PASSWORD: ${{ secrets.FASTLANE_PASSWORD }}
          FASTLANE_SESSION: ${{ secrets.FASTLANE_SESSION }}

      - name: Compress Export File
        uses: papeloto/action-zip@v1
        with:
          files: ./GithubNotifications.app
          dest: GithubNotifications.zip

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
          
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./GithubNotifications.zip
          asset_name: GithubNotifications.zip
          asset_content_type: application/zip